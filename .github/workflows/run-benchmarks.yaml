name: Run benchmarks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  get-languages:
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.get-languages.outputs.languages }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get list of languages
        id: get-languages
        run: echo "::set-output name=languages::[\"$(ls ./benchmarks | tr "\n" "\t" | sed 's/\t$//' | sed -E 's/\t/","/g')\"]"
  run-benchmarks:
    needs:
      - get-languages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ${{ fromJSON(needs.get-languages.outputs.languages) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build docker image
        run: docker build --tag=${{ matrix.language }} ./benchmarks/${{ matrix.language }}
      - name: Run benchmarks
        run: docker run --volume=$HOME/results/${{ matrix.language }}:/results ${{ matrix.language }}
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.language }}
          path: ~/results/${{ matrix.language }}
  analyse-benchmark-results:
    needs:
      - run-benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Cache Julia artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/packages
            ~/.julia/registries
          key: ${{ runner.os }}-${{ hashFiles('./analysis/Project.toml', 'analysis/Manifest.toml') }}
      - name: Install Juliaup
        run: curl -fsSL https://install.julialang.org | sh -s -- --yes
      - name: Install Julia
        run: juliaup add release
      - name: Install system image
        run: julia -e 'import Pkg; Pkg.add(url=""); import CuratedSystemImages; CuratedSystemImages.install("AlgebraOfGraphics")'
      - name: Install Julia dependencies
        run: julia --project=. -e 'import Pkg; Pkg.instantiate()'
        working-directory: analysis
      - name: Download benchmark results
        uses: actions/download-artifact@v3
        with:
          path: ~/results
      - name: Run analysis
        run: julia --project=. src/analysis.jl ~/results ~/output
        working-directory: analysis
      - name: Upload benchmark analysis
        uses: actions/upload-artifact@v3
        with:
          name: analysis-output
          path: ~/output/benchmarks.svg
  publish-results-to-github-pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - analyse-benchmark-results
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download analysis output
        uses: actions/download-artifact@v3
        with:
          name: analysis-output
          path: ./pages/images
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v2
      - name: Upload benchmark results page
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
        id: deploy
